{"version":3,"sources":["serviceWorker.js","components/Tabs/MyTab/MyRoomList.js","components/Tabs/MyTab/MyTab.js","components/Tabs/RoomTab/RoomList.js","components/Tabs/RoomTab/CreateButton.js","components/Tabs/RoomTab/RoomTab.js","components/Footer/Footer.js","components/EmptyCard.js","components/Header/Header.js","store.js","components/Tabs/ProfileTab/ProfileTab.js","components/CreateRoom.js","components/Tabs/SettingTab/Setting.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","MyRoomList","myRoomList","this","props","myRooms","map","myRoom","Card","title","dep","dest","subtitle","writer","joinedUsers","length","maxNum","actAsExpander","showExpandableButton","Button","onClick","id","bind","expandable","Component","connect","state","dispatch","type","roomId","MyTab","RoomList","roomlist","url","fetch","method","reload","desc","rooms","userId","CreateButton","exact","to","style","mode","margin","top","right","bottom","left","position","RoomTab","React","useStyles","makeStyles","root","width","Footer","classes","useState","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","className","BottomNavigationAction","component","NavLink","label","icon","content","cardStyle","display","height","HiddenCard","variant","CardHeader","theme","flexGrow","breakpoints","up","menuButton","marginRight","spacing","setAnchorEl","Fragment","CssBaseline","AppBar","Toolbar","Typography","noWrap","IconButton","aria-label","aria-controls","currentTarget","color","edge","ProfileTab","axios","require","default","CreateRoom","floatingLabelText","e","text","Number","undefined","console","log","post","alert","SettingTab","App","user","callApi","a","response","json","body","then","res","setState","catch","err","path","c","Setting","rawInitState","maxId","notices","filter","room","initState","createStore","newState","action","currentMaxId","newId","newRooms","newMyRooms","i","currentUserId","push","currentRoom","currentRoomId","newJoinedUsers","num","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.0a13caba.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport { Card, CardActions, CardHeader, CardText } from 'material-ui/Card';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass MyRoomList extends Component {\r\n    render() {\r\n        var myRoomList = this.props.myRooms.map(function (myRoom) {\r\n            return (\r\n                <Card>\r\n                    <CardHeader title={\"출발지: \" + myRoom.dep + \" 목적지: \" + myRoom.dest} \r\n                    subtitle={\"작성자: \" + myRoom.writer+ \" 현재 인원: \"+myRoom.joinedUsers.length+\"/\"+myRoom.maxNum} actAsExpander={true} showExpandableButton={true} />\r\n                    <CardActions>\r\n                        <Button onClick = {function(){\r\n                            this.props.onClick('quit', myRoom.id);\r\n                        }.bind(this)}>\r\n                            방 나가기\r\n                        </Button>\r\n                    </CardActions>\r\n                    <CardText expandable={true}>추가정보</CardText>\r\n                </Card>\r\n            )\r\n        }.bind(this));\r\n        return (\r\n            <MuiThemeProvider>\r\n                {myRoomList}\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    function(state){\r\n        return{\r\n            myRooms: state.myRooms\r\n        }\r\n    },\r\n    function(dispatch){\r\n        return{\r\n            onClick(type, roomId){\r\n                dispatch({type, roomId})\r\n            }\r\n        }\r\n    }\r\n)(MyRoomList);","import React from 'react';\r\nimport MyRoomList from './MyRoomList';\r\n\r\nconst MyTab = () => {\r\n    return (\r\n        <div>\r\n            <MyRoomList></MyRoomList>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyTab;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport { Card, CardActions, CardHeader, CardText } from 'material-ui/Card';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nclass RoomList extends Component {\r\n    render() {\r\n        var roomlist = \r\n            <Card>\r\n                <CardHeader\r\n                    title={\"출발지: \" + this.props.dep + \" 목적지: \" + this.props.dest}\r\n                    subtitle={\" 현재 인원: \" + \"TBD\" + \"/\" + this.props.maxNum} actAsExpander={true} showExpandableButton={true} />\r\n                \r\n                \r\n                <CardActions>\r\n                    {/*\r\n                    <Button disabled = {this.props.myRooms.indexOf(room) > -1 ? true : false} onClick = {function(){\r\n                        this.props.onClick('join', this.props.roomId);\r\n                    }.bind(this)}>\r\n                        참가\r\n                    </Button>\r\n                    */}\r\n                    <Button onClick={function () {\r\n                        const url = '/api/roomlist/' + this.props.id;\r\n                        fetch(url, {\r\n                            method: 'DELETE'\r\n                        });\r\n                        window.location.reload();\r\n                    }.bind(this)}>\r\n                        방 삭제\r\n                    </Button>\r\n                </CardActions>\r\n                \r\n                \r\n                <CardText expandable={true}>{this.props.desc}</CardText>\r\n            </Card>\r\n\r\n        return (\r\n            <MuiThemeProvider>\r\n                {roomlist}\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    function (state) {\r\n        return {\r\n            rooms: state.rooms,\r\n            myRooms: state.myRooms,\r\n            userId: state.userId\r\n        }\r\n    },\r\n    function (dispatch) {\r\n        return {\r\n            onClick: function (type, roomId) {\r\n                dispatch({ type, roomId });\r\n            }\r\n        }\r\n    }\r\n)(RoomList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './button.css';\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton';\r\nimport ContentAdd from 'material-ui/svg-icons/content/add';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nclass CreateButton extends Component {\r\n    render() {\r\n        return (\r\n            <NavLink exact to={'create'}>\r\n                <MuiThemeProvider>\r\n                    <FloatingActionButton style={style}>\r\n                        <ContentAdd />\r\n                    </FloatingActionButton>\r\n                </MuiThemeProvider>\r\n            </NavLink>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    function (dispatch) {\r\n        return {\r\n            onClick: function (mode) {\r\n                dispatch({ type: mode });\r\n            }\r\n        }\r\n    }\r\n)(CreateButton);\r\n\r\nconst style = {\r\n    margin: 0,\r\n    top: 'auto',\r\n    right: 20,\r\n    bottom: 80,\r\n    left: 'auto',\r\n    position: 'fixed',\r\n};","import React from 'react';\r\nimport RoomList from './RoomList'\r\nimport CreateButton from './CreateButton';\r\n\r\nclass RoomTab extends React.Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <RoomList id={this.props.id} dep = {this.props.dep} dest={this.props.dest} maxNum={this.props.maxNum} desc={this.props.desc} />\r\n                <CreateButton></CreateButton>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default RoomTab;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { NavLink } from 'react-router-dom'\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport RoomTabIcon from '@material-ui/icons/HouseRounded';\r\nimport MyTabIcon from '@material-ui/icons/Favorite';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        position: 'fixed',\r\n        bottom: '0'\r\n    },\r\n});\r\n\r\nexport default function Footer() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    return (\r\n        <BottomNavigation\r\n            value={value}\r\n            onChange={(event, newValue) => {\r\n                setValue(newValue);\r\n            }}\r\n            showLabels\r\n            className={classes.root}\r\n        >\r\n\r\n            <BottomNavigationAction\r\n                component={NavLink}\r\n                to=\"/\"\r\n                label=\"방 목록\"\r\n                value=\"RoomTab\"\r\n                icon={<RoomTabIcon />}\r\n                className={classes.content} />\r\n            <BottomNavigationAction\r\n                component={NavLink}\r\n                to=\"/mytab\"\r\n                label=\"내 방\"\r\n                value=\"MyTab\"\r\n                icon={<MyTabIcon />}\r\n                className={classes.content} />\r\n\r\n            <BottomNavigationAction\r\n                component={NavLink}\r\n                to=\"/settings\"\r\n                label=\"설정\"\r\n                value=\"settings\"\r\n                icon={<SettingsIcon />}\r\n                className={classes.content}\r\n\r\n            />\r\n        </BottomNavigation>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nvar cardStyle = {\r\n    display: 'block',\r\n    width: '100%',\r\n    height: '5vw'\r\n}\r\n\r\nexport default function HiddenCard() {\r\n    return (\r\n        <Card variant=\"outlined\" style={cardStyle}>\r\n            <CardHeader/>\r\n        </Card>\r\n    );\r\n}\r\n// 나중에는 room 갯수에 따라 emptyCard 렌더할지 말지 정해줘야 함\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport EmptyCard from '../EmptyCard'\r\nimport Box from '@material-ui/core/Box';\r\nimport CssBaseline from '@material-ui/core/CSSBaseLine';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        top: '0',\r\n        width: '100%',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        [theme.breakpoints.up('sm')]: {},\r\n        textDecoration: 'none',\r\n        color: 'white'\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction Header() {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleMenu = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <div className={classes.root}>\r\n                <AppBar position=\"relative\">\r\n                    <Toolbar>\r\n                        <Typography\r\n                            variant=\"h6\"\r\n                            className={classes.title}\r\n                            noWrap\r\n                            component={NavLink} to='/'>\r\n                            카택전\r\n                        </Typography>\r\n\r\n                        <IconButton\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            onClick={handleMenu}\r\n                            color=\"inherit\"\r\n                            component={NavLink} to='/'\r\n                            edge='end'\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    function (dispatch) {\r\n        return {\r\n            onClick: function (mode) {\r\n                dispatch({ type: mode });\r\n            }\r\n        }\r\n    }\r\n)(Header);\r\n","import { createStore } from 'redux';\r\n\r\nvar rawInitState = {\r\n    userId: \"1000\",\r\n    mode: 'home',\r\n    rooms: [\r\n        {\r\n            id: 1, writer: '태형', dep: '대전', dest: '우한', desc: '추가정보 없음',\r\n            joinedUsers: [\"3000\", \"2000\"], maxNum:4\r\n        },\r\n    ],\r\n    maxId: 1,\r\n    notices: [\r\n        { id: 1, title: '중요공지', desc: '카택전 v0.1 런칭' }\r\n    ]\r\n};\r\n\r\nvar myRooms = [];\r\nmyRooms = rawInitState.rooms.filter(function (room) {\r\n    if (room.userId === rawInitState.userId) {\r\n        console.log(\"yes!\");\r\n        return true;\r\n    }\r\n    return false;\r\n});\r\n\r\nvar initState = { ...rawInitState, myRooms };\r\n\r\nfunction reducer(state = initState, action) {\r\n    var newState, newMyRooms;\r\n    if (action.type === 'create') {\r\n        var currentMaxId = state.rooms.length;\r\n        var newId = currentMaxId + 1;\r\n        var room = { id: newId, writer: action.writer, dep: action.dep, dest: action.dest, desc: action.desc, joinedUsers: [state.userId], maxNum:action.maxNum };\r\n        console.log(room);\r\n        var newRooms = [...state.rooms, room];\r\n        newMyRooms = [...state.myRooms, room]\r\n        newState = { ...state, mode: 'home', rooms: newRooms, maxId: newId, myRooms: newMyRooms };\r\n        return newState;\r\n    }\r\n\r\n    if (action.type === 'join') {\r\n        var userId = state.userId;\r\n        var room = state.rooms[action.roomId - 1];\r\n        if(room.joinedUsers.length===room.maxNum){\r\n            alert(\"정원이 다 찼습니다.\")\r\n            return state;}\r\n        for (var i = 0; i < room.joinedUsers.length; i++) {\r\n            var currentUserId = room.joinedUsers[i];\r\n            if (currentUserId === userId) {\r\n                window.alert('이미 참여한 방입니다');\r\n                return state;\r\n            }\r\n        }\r\n        room.joinedUsers.push(userId);\r\n        console.log(\"joined\", room, userId, room.joinedUsers);\r\n\r\n        newMyRooms = [...state.myRooms, room];\r\n        newState = { ...state, myRooms: newMyRooms};\r\n        return newState;\r\n    }\r\n\r\n    if (action.type === 'delete') {\r\n        var newRooms = state.rooms.filter(function (room) {\r\n            if (room.id === action.roomId) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n\r\n        var newMyRooms = state.myRooms.filter(function (myRoom) {\r\n            if (myRoom.id === action.roomId) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n\r\n        newState = { ...state, rooms: newRooms, myRooms: newMyRooms };\r\n        return newState;\r\n    }\r\n\r\n    if (action.type === 'quit') {\r\n        var userId = state.userId;\r\n        var newMyRooms = [];\r\n        for (var i = 0; i < state.myRooms.length; i++) {\r\n            var currentRoom = state.myRooms[i];\r\n            var currentRoomId = currentRoom.id;\r\n            if (currentRoomId !== action.roomId) {\r\n                newMyRooms.push(currentRoom);\r\n            }\r\n        }\r\n        var room = state.rooms[action.roomId-1];\r\n\r\n        var newJoinedUsers = room.joinedUsers.filter(function(user){\r\n            if(user === userId){\r\n                return false;\r\n            }\r\n            return true;\r\n        })\r\n\r\n        room.joinedUsers = newJoinedUsers;\r\n        console.log(\"quit\", room, userId, room.joinedUsers);\r\n\r\n\r\n        newState = { ...state, myRooms: newMyRooms };\r\n        newState.rooms.num = newState.rooms.num - 1\r\n        return newState;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n","import React, { Component } from 'react';\r\n\r\nclass ProfileTab extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                내 정보 탭\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileTab;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport { RaisedButton, TextField } from 'material-ui';\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport { HardwareDesktopWindows } from 'material-ui/svg-icons';\r\n\r\nconst axios = require('axios').default;\r\n\r\nclass CreateRoom extends Component {\r\n    render() {\r\n        var dep, dest, maxNum, desc;\r\n        return (\r\n            <MuiThemeProvider>\r\n                {/*}\r\n                <TextField floatingLabelText=\"작성자\" onChange={function (e, text) {\r\n                    writer = text\r\n                }} /><br />\r\n                */}\r\n                <TextField floatingLabelText=\"출발지\" onChange={function (e, text) {\r\n                    dep = text\r\n                }} /><br />\r\n                <TextField floatingLabelText=\"목적지\" onChange={function (e, text) {\r\n                    dest = text\r\n                }} /><br />\r\n                <TextField floatingLabelText=\"추가정보\" onChange={function (e, text) {\r\n                    desc = text\r\n                }} /><br />\r\n                <TextField floatingLabelText=\"최대인원\" onChange={function (e, text) {\r\n                    maxNum = Number(text)\r\n                }} /><br />\r\n                <NavLink exact to={'/'}>\r\n                    <RaisedButton label=\"방 개설\" onClick={function () {\r\n                        if (dep !== undefined && dest !== undefined && maxNum !== undefined) {\r\n                            if (desc === undefined) {\r\n                                desc = '추가정보 없음';\r\n                            }\r\n                            console.log(\"maxNum:\", maxNum);\r\n                            axios.post('/api/roomlist', {\r\n                                dep: dep,\r\n                                dest: dest,\r\n                                maxNum: maxNum,\r\n                                desc: desc,\r\n                                writer: '3000'\r\n                            });\r\n                        } else {\r\n                            window.alert('다시 입력하세요!');\r\n                        }\r\n                    }.bind(this)} />\r\n                </NavLink>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    function (dispatch) {\r\n        return {\r\n            onClick: function (mode, writer, dep, dest, desc, maxNum) {\r\n                dispatch({ type: mode, writer, dep, dest, desc, maxNum })\r\n            }\r\n        }\r\n    }\r\n)(CreateRoom);\r\n","import React, { Component } from 'react';\r\n\r\nclass SettingTab extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                설정 탭\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SettingTab;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport MyTab from './components/Tabs/MyTab/MyTab';\r\nimport RoomTab from './components/Tabs/RoomTab/RoomTab';\r\nimport Footer from './components/Footer/Footer';\r\nimport { Route, } from \"react-router-dom\";\r\nimport Header from './components/Header/Header';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './components/Tabs/ProfileTab/ProfileTab';\r\nimport CreateRoom from './components/CreateRoom';\r\nimport EmptyCard from './components/EmptyCard';\r\nimport Setting from './components/Tabs/SettingTab/Setting';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    user: '',\r\n    roomlist: '',\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.callApi()\r\n      .then(res =>this.setState({roomlist: res}))\r\n      .catch(err => console.log(err));\r\n  }\r\n  callApi = async() => {\r\n    const response = await fetch('/api/roomlist');\r\n    const body = await response.json();\r\n    return body;\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <EmptyCard />\r\n        <Route exact path=\"/\">\r\n          {this.state.roomlist ? this.state.roomlist.map(c=>{\r\n            return <RoomTab id={c.roomId} dep={c.dep} dest={c.dest} maxNum={c.maxNum} desc={c.desc} />\r\n          }): ''}\r\n        </Route>\r\n        <Route exact path=\"/create\"><CreateRoom></CreateRoom></Route>\r\n        <Route exact path=\"/mytab\"><MyTab></MyTab></Route>\r\n        <Route exact path=\"/profile\"><Profile></Profile></Route>\r\n        <Route exact path=\"/settings\"><Setting></Setting></Route>\r\n        <EmptyCard />\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  function (state) {\r\n    return {\r\n      mode: state.mode\r\n    }\r\n  }\r\n)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n    </Provider>\r\n    ,document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}